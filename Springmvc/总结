
//======== 前期准备工作
1.配置java环境
	下载jdk（使用版本1.8.0_65）（http://www.oracle.com/technetwork/java/javase/downloads/index.html）
	jdk 会引导安装jre的
	
2.下载eclipse （使用版本 mars1 JAVA EE）(http://www.eclipse.org/downloads/)


2.先配置tomcat服务器
	下载tomcat （使用版本8.0）（http://tomcat.apache.org/）
	左边找到Downloads->Tomcat 8.0->主界面的Binary Distributions->core->32-bit/64-bit Windows Service Installer
	下载完 这个exe文件后安装即可
	Tomcat 环境变量设置
	新增 环境变量
		 名： CATALINA_HOME
		 值为Tomcat的安装目录（eg.D:\eclipse\Tomcat 8.0）
		点击安装目录下的 bin 目录下的Tomcat8w.exe
		如果跳出 Apache的欢迎页 即表示成功
		

springmvc 框架搭建步骤：
1.创建工程，拷贝springmvc相关jar 到 lib
2.配置web.xml ，配置前端控制器DispatcherServlet
 <servlet>
      <servlet-name>springmvc</servlet-name>
      <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
  </servlet>
  <servlet-mapping>
      <servlet-name>springmvc</servlet-name>
      <url-pattern>*.do</url-pattern>
  </servlet-mapping>
  3.在web-inf 下创建springmvc配置文件，【servletname】-servlet.xml
  文件名必须为springmvc-servlet.xml 
  
  4 <!-- 配置HandlerMapping 根据benaname找到对应的Conntroller --> （可以省略）
<bean class ="org.springframework.web.servlet.
mvc.support.ControllerBeanNameHandlerMapping"> </bean>
5 创建JSP 页面 需要发出请求的页面
6. 创建Controller 继承AbstractController 重写handleRequestInternal
	// 返回数据 和页面
	ModelAndView mav=  new ModelAndView("index");
	mav.addObject("helloworld", "hello "+ hello);
7. <!-- 配置视图解释器 -->
<bean class = "org.springframework.web.servlet.view.InternalResourceViewResolver">
	<!-- 前缀 -->
	<property name="prefix" value = "/view/"></property>
	<!-- 后缀 -->
	<property name="suffix" value = ".jsp"></property>
</bean>